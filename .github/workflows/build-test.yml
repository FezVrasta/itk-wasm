name: Build, test

on: [push]

jobs:
  build-test-deploy:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: 'Free up disk space'
      run: |
        # Workaround for https://github.com/actions/virtual-environments/issues/709
        df -h
        sudo apt-get remove -y '^ghc-8.*'
        sudo apt-get remove -y '^dotnet-.*'
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y 'php.*'
        sudo apt-get autoremove -y
        sudo apt-get clean
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf /usr/share/dotnet/
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h

    - name: Set docker image tag
      run: |
        TAG=$(date '+%Y%m%d')-$(git rev-parse --short HEAD)
        echo "DOCKER_TAG=${TAG}" >> $GITHUB_ENV

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ env.DOCKER_TAG }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true

    - name: Build itk-js-base
      run: |
        ./src/Docker/itk-js-base/build.sh --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache

    - name: Build itk-js
      run: |
        ./src/Docker/itk-js/build.sh --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache
        sudo rm -rf ./src/Docker/itk-js/ITKBridgeJavaScriptModuleCopy

    - name: Build itk-js-vtk
      run: |
        ./src/Docker/itk-js-vtk/build.sh --load --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache

    - uses: actions/setup-node@v2
      with:
        node-version: '10'

    - name: Install packages
      run: |
        npm ci

    - name: Build
      run: |
        npm run build

    - name: Lint tests
      run: |
        npm run test:lint

    - name: Node tests
      run: |
        npm run test:node

    - name: Browser tests
      run: |
        # Allow writing test/output.html
        sudo chmod 777 test
        # To debug locally, run `./test/run.sh -d`
        ./test/run.sh

    - name: Test building a pipeline
      run: |
        cd test/MedianFilterPipeline
        docker run --rm insighttoolkit/itk-js:latest > ./itk-js
        chmod +x ./itk-js
        rm -rf web-build
        ./itk-js web-build
        cd -

    - name: Setup ipfs
      uses: ibnesayeed/setup-ipfs@master
      with:
        ipfs_version: ^0.8

    - name: Prepare testing data for IPFS
      run: |
        mkdir -p itk-js-testing-data/latest
        rsync -v -r --exclude=Objects --exclude='*-hash-stamp' ./build/ExternalData/ ./itk-js-testing-data/latest/
        new_cid=$(ipfs add -r -Q --cid-version 1 --raw-leaves itk-js-testing-data)

    - name: Pin testing data on Pinata
      if: github.ref == 'refs/heads/master'
      env:
        PINATA_JWT: ${{ secrets.PINATA_JWT }}
      run: |
        ipfs pin remote service add pinata https://api.pinata.cloud/psa "$PINATA_JWT"
        if ! ipfs pin remote ls --service=pinata --name=itk-js-testing-data | grep $new_cid; then
          ipfs pin remote add --service=pinata --name=itk-js-testing-data $new_cid
        else
          echo "CID ${new_cid} already pinned on Pinata."
        fi

    - name: Add testing data to Textile Bucket
      uses: textileio/github-action-buckets@master
      id: bucket
      with:
        key: ${{ secrets.TEXTILE_ACCOUNT_KEY }}
        secret: ${{ secrets.TEXTILE_ACCOUNT_SECRET }}
        bucket: 'itk-js-testing-data'
        thread: 'bafkyq3o2yq2wx6fe7lusdx6vd2rpwrfdr746qlbhcnukuf7yscz42fq'
        path: './itk-js-testing-data/'
      env:
        HUB_ORG: 'isc'

    - name: Echo bucket info
      run: |
        echo "ipfs: ${{ steps.bucket.outputs.ipfs }}"
        echo "ipfs link: ${{ steps.bucket.outputs.ipfsUrl }}"
        echo "ipns: ${{ steps.bucket.outputs.ipns }}"
        echo "ipns link: ${{ steps.bucket.outputs.ipnsUrl }}"
        echo "hub: ${{ steps.bucket.outputs.hub }}"
        echo "www: ${{ steps.bucket.outputs.www }}"

    - name: Build and publish docs
      if: github.ref == 'refs/heads/master'
      run: |
        git config --global user.name "GitHub Actions CI"
        git config --global user.email "robot@itk.org"
        npm run doc:publish

    - name: insighttoolkit DockerHub login
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.INSIGHTTOOLKIT_DOCKERHUB_USERNAME }}
        password: ${{ secrets.INSIGHTTOOLKIT_DOCKERHUB_PASSWORD }}

    - name: Push insighttoolkit images to DockerHub
      if: github.ref == 'refs/heads/master'
      run: |
        docker push insighttoolkit/itk-js-base:latest
        docker push insighttoolkit/itk-js-base:${{ env.DOCKER_TAG }}
        docker push insighttoolkit/itk-js:latest
        docker push insighttoolkit/itk-js:${{ env.DOCKER_TAG }}

    - name: kitware DockerHub login
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.KITWARE_DOCKERHUB_USERNAME }}
        password: ${{ secrets.KITWARE_DOCKERHUB_PASSWORD }}

    - name: Push kitware images to DockerHub
      if: github.ref == 'refs/heads/master'
      run: |
        docker push kitware/itk-js-vtk:latest
        docker push kitware/itk-js-vtk:${{ env.DOCKER_TAG }}
